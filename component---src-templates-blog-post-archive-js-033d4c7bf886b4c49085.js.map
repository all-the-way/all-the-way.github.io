{"version":3,"file":"component---src-templates-blog-post-archive-js-033d4c7bf886b4c49085.js","mappings":"qPAiFA,EAxEwB,SAAC,GAA+C,IAA7CA,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,aAClD,OAAKF,EAAMG,OAeT,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEC,MAAM,cACNC,YAAY,yCAGd,gBAACC,EAAA,EAAD,KACE,8CACA,sBAAIC,UC5BO,wCD6BRP,EAAMQ,KAAI,SAACC,GAAU,IAAD,cACbC,EAAK,UACTD,EAAKE,qBADI,iBACT,EAAoBC,YADX,iBACT,EAA0BC,iBADjB,iBACT,EAAqCC,uBAD5B,iBACT,EACIC,uBAFK,iBACT,EACqBC,cAFZ,iBACT,EAC6BC,gBAFpB,aACT,EACuCC,IACzC,OACE,sBAAIC,IAAKV,EAAKW,KACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAIb,EAAKW,KACb,2BAASb,UCrCT,uCDsCE,uBACEA,UCxCH,uCDyCGgB,MAAO,CAAEC,gBAAgB,OAAQd,EAAT,OAE1B,uBAAKH,UC5CJ,0CD6CC,8BACE,0BACE,6BAAOkB,EAAAA,EAAAA,IAAMhB,EAAKL,UAGtB,gCAAUqB,EAAAA,EAAAA,IAAMhB,EAAKiB,UACrB,gBAACC,EAAA,EAAD,CAAQJ,MAAO,CAAEK,UAAW,SAAUC,UAAW,KAAjD,mBAWd,uBAAKtB,UC/DQ,0CDgEVN,GACC,gBAAC0B,EAAA,EAAD,CAAQG,OAAK,EAACC,KAAM9B,GAApB,mBAIDC,GACC,gBAACyB,EAAA,EAAD,CAAQG,OAAK,EAACC,KAAM7B,GAApB,iBA3DN,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEE,MAAM,cACNC,YAAY,yCAEd,gBAACC,EAAA,EAAD,KACE,gEECV,EAfkB,SAAC,GAGZ,IAFL0B,EAEI,EAFJA,KAEI,IADJC,YAAe/B,EACX,EADWA,aAAcD,EACzB,EADyBA,iBAEvBD,EAAQgC,EAAKE,UAAUC,MAE7B,OACE,gBAAC,EAAD,CACEnC,MAAOA,EACPE,aAAcA,EACdD,iBAAkBA","sources":["webpack://all-the-way-website/./src/components/pages/BlogPostArchive/index.js","webpack://all-the-way-website/./src/components/pages/BlogPostArchive/blogPostArchive.module.css","webpack://all-the-way-website/./src/templates/blog-post-archive.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport parse from \"html-react-parser\";\nimport Layout from \"../../layout\";\nimport Content from \"../../Layout/Content\";\nimport Seo from \"../../seo\";\nimport * as styles from \"./blogPostArchive.module.css\";\nimport Button from \"../../common/Button\";\n\nconst BlogPostArchive = ({ posts, previousPagePath, nextPagePath }) => {\n  if (!posts.length) {\n    return (\n      <Layout>\n        <Seo\n          title=\"Alla inlägg\"\n          description=\"All The Way gym i Malmös blogginlägg\"\n        />\n        <Content>\n          <p>Det finns ännu inga bloggposter.</p>\n        </Content>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <Seo\n        title=\"Alla inlägg\"\n        description=\"All The Way gym i Malmös blogginlägg\"\n      />\n\n      <Content>\n        <h1>Våra blogginlägg</h1>\n        <ol className={styles.posts}>\n          {posts.map((post) => {\n            const image =\n              post.featuredImage?.node?.localFile?.childImageSharp\n                ?.gatsbyImageData?.images?.fallback?.src;\n            return (\n              <li key={post.uri}>\n                <Link to={post.uri}>\n                  <article className={styles.post}>\n                    <div\n                      className={styles.image}\n                      style={{ backgroundImage: `url(${image})` }}\n                    ></div>\n                    <div className={styles.content}>\n                      <header>\n                        <h2>\n                          <span>{parse(post.title)}</span>\n                        </h2>\n                      </header>\n                      <section>{parse(post.excerpt)}</section>\n                      <Button style={{ alignSelf: \"center\", marginTop: 30 }}>\n                        Läs mer\n                      </Button>\n                    </div>\n                  </article>\n                </Link>\n              </li>\n            );\n          })}\n        </ol>\n\n        <div className={styles.buttons}>\n          {previousPagePath && (\n            <Button light link={previousPagePath}>\n              Föregående sida\n            </Button>\n          )}\n          {nextPagePath && (\n            <Button light link={nextPagePath}>\n              Nästa sida\n            </Button>\n          )}\n        </div>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default BlogPostArchive;\n","// extracted by mini-css-extract-plugin\nexport var buttons = \"blogPostArchive-module--buttons--vSxFq\";\nexport var content = \"blogPostArchive-module--content--Kgtqb\";\nexport var image = \"blogPostArchive-module--image--BISLQ\";\nexport var post = \"blogPostArchive-module--post--eKmq5\";\nexport var posts = \"blogPostArchive-module--posts--nR3Xo\";","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport BlogPostArchive from \"../components/pages/BlogPostArchive\"\n\nconst BlogIndex = ({\n  data,\n  pageContext: { nextPagePath, previousPagePath },\n}) => {\n  const posts = data.allWpPost.nodes\n\n  return (\n    <BlogPostArchive\n      posts={posts}\n      nextPagePath={nextPagePath}\n      previousPagePath={previousPagePath}\n    ></BlogPostArchive>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query WordPressPostArchive($offset: Int!, $postsPerPage: Int!) {\n    allWpPost(\n      sort: { fields: [date], order: DESC }\n      limit: $postsPerPage\n      skip: $offset\n    ) {\n      nodes {\n        excerpt\n        uri\n        title\n        featuredImage {\n          node {\n            altText\n            localFile {\n              childImageSharp {\n                gatsbyImageData(quality: 100, layout: FIXED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["posts","previousPagePath","nextPagePath","length","title","description","Content","className","map","post","image","featuredImage","node","localFile","childImageSharp","gatsbyImageData","images","fallback","src","key","uri","Link","to","style","backgroundImage","parse","excerpt","Button","alignSelf","marginTop","light","link","data","pageContext","allWpPost","nodes"],"sourceRoot":""}